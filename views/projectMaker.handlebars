<nav>
    <!--Beginning Main Nav -->
    <div class="nav-wrapper grey lighten-4">
        <div class="container">
            <a href="/" class="brand-logo">
                <img id="ttfmLogo" src="/assets/img/ttfm-logo-clr.svg" alt="TestThisForMe Logo" width="50">
                <span class="hide-on-med-and-down" id="navTitle">TestThisFor.Me</span>
            </a>
            <ul class="right hide-on-med-and-down indigo-text text-darken-4">
                <li>
                    <a href="/projects/">All Projects</a>
                </li>
                <li>
                    <a href="#" id="myProjectsButton">My Projects</a>
                </li>
                {{!--
                <li>
                    <a href="#" data-target="slide-out" class="sidenav-trigger profile">My Profile</a>
                </li> --}} {{!--
                <li>
                    <a href="#">Login/Sign Up</a>
                </li> --}}
            </ul>
        </div>
    </div>
</nav>
<div class="row center-align">
    <h4>Post a Project</h4>
</div>
<div class="row">
    <form class="col s12">
        <div class="row">
            <div class="input-field col s12">
                <input placeholder="A brief description of your project" id="project_title" type="text" class="validate">
                <label for="project_title">Project Title</label>
            </div>
            <div class="input-field col s12">
                <input placeholder="https://github.com/your_info" id="repoUrl" type="text" class="validate">
                <label for="repoUrl">Repo URL:</label>
            </div>
            <div class="input-field col s12">
                <input placeholder="https://yoursite.com/your_info" id="hostedUrl" type="text" class="validate">
                <label for="hostedUrl">Hosted URL:</label>
            </div>
            <div class="input-field col s12">
                <textarea style="height: 90px" id="bodyText" class="materialize-textarea" placeholder="Tell us how to interact with your project and what you want to know about it"></textarea>
                <label for="bodyText">About your project</label>
            </div>
            <div class="input-field col s12 center-align">
                <button class="btn btn-large" id="post">POST</button>
                <a class="waves-effect waves-light btn btn-large modal-trigger" href="#repoPicker">Repo Picker</a>
            </div>
        </div>
    </form>
</div>
<!-- Modal Structure -->
<div id="repoPicker" class="modal modal-fixed-footer">
    <div class="modal-content">
        <h4>Choose a Repository</h4>

    </div>
    <div class="modal-footer">
        <a href="#!" class="waves-effect waves-green btn">Choose</a>
        <a href="#!" class="modal-close waves-effect waves-green btn-flat">Close</a>
    </div>
</div>
<script>

    var githubAlias = sessionStorage.getItem('ttfmgithubAlias');
    var repos;
    if (githubAlias) {
        fetch(`https://api.github.com/users/${githubAlias}/repos?sort="updated"`)
            .then((response) => {
                return response.json();
            })
            .then((json) => {
                repos = json;
                console.log(repos);
                var modalContent = document.querySelector('#repoPicker .modal-content');
                for (var i = 0; i < repos.length; i++) {
                    var newCard = document.createElement('div');
                    newCard.classList.add('card');
                    var cardTitle = document.createElement('h6');
                    cardTitle.textContent = repos[i].full_name;
                    var cardDetail = document.createElement('p');
                    cardDetail.textContent = "Updated at:" + repos[i].updated_at;
                    newCard.appendChild(cardTitle);
                    newCard.appendChild(cardDetail);
                    newCard.setAttribute('data-index', i);
                    modalContent.appendChild(newCard);
                }
            });
    }
    document.addEventListener('DOMContentLoaded', function () {
        var elems = document.querySelectorAll('.modal');
        var instances = M.Modal.init(elems);
    });
    var selectedRepo = {};
    document.addEventListener('click', function (evt) {
        if (evt.target.classList.contains('card')) {
            var targetRepoCard = evt.target;
            console.log(targetRepoCard);
            selectedRepo = repos[targetRepoCard.getAttribute('data-index')];
            var hostedUrl = document.querySelector('#hostedUrl');
            var repoUrl = document.querySelector('#repoUrl');
            var title = document.querySelector('#project_title');
            var bodyText = document.querySelector('#bodyText');
            var labels = document.querySelectorAll('label');
            labels.forEach((label) => {
                label.classList.add('active');
            });
            hostedUrl.value = selectedRepo.homepage;
            repoUrl.value = selectedRepo.html_url;
            title.value = selectedRepo.full_name;
            bodyText.value = '"' + selectedRepo.description + '"';
            
        } else if (evt.target.parentNode.classList.contains('card')) {
            var targetRepoCard = evt.target.parentNode;
            console.log(targetRepoCard);
            selectedRepo = repos[targetRepoCard.getAttribute('data-index')];
            var hostedUrl = document.querySelector('#hostedUrl');
            var repoUrl = document.querySelector('#repoUrl');
            var title = document.querySelector('#project_title');
            var bodyText = document.querySelector('#bodyText');
            var labels = document.querySelectorAll('label');
            labels.forEach((label) => {
                label.classList.add('active');
            });
            hostedUrl.value = selectedRepo.homepage;
            repoUrl.value = selectedRepo.html_url;
            title.value = selectedRepo.full_name;
            bodyText.value = '"' + selectedRepo.description + '"';
        }

    });


    var postButton = document.querySelector('#post');
    postButton.addEventListener('click', function (evt) {
        evt.preventDefault();
        let localUri = 'http://localhost:8080/projects';
        let productionUri = 'http://www.testthisfor.me/projects';
        let title = document.querySelector('#project_title').value.trim();
        let repoUrl = document.querySelector('#repoUrl').value.trim();
        let hostedUrl = document.querySelector('#hostedUrl').value.trim();
        let bodyText = document.querySelector('#bodyText').value.trim();
        let UserId = parseInt(window.location.pathname.split('/')[3]);

        let authorAvatarUrl = sessionStorage.getItem('ttfmavatarUrl');

        fetch(productionUri, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                title: title,
                body: bodyText,
                repoUrl: repoUrl,
                hostedUrl: hostedUrl,
                //id of the author
                UserId: UserId,
                authorAvatarUrl: authorAvatarUrl
            }),
            // redirect: 'follow'
        })
            .then((response) => {
                //maybe save token here
                console.log(response);
                redirectUri = response.url;
                // return response.json();
                window.location.href = redirectUri;
            })
    });
</script>